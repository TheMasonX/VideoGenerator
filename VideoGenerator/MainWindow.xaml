<Window x:Class="VideoGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VideoGenerator"
        xmlns:viewmodels="clr-namespace:VideoGenerator.ViewModels"
        xmlns:models="clr-namespace:VideoGenerator.Models" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:extensions="clr-namespace:VideoGenerator.Utils.Extensions"
        AllowDrop="True"
        DragEnter="Window_DragEnter"
        DragOver="Window_DragOver"
        Drop="Window_Drop"
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="Image To Video Converter" Height="450" Width="800">
    <Window.DataContext>
        <viewmodels:MainWindowVM/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding x:Name="openShortcut" Key="O" Modifiers="Ctrl" Command="{Binding OpenFilesCommand}"/>
        <KeyBinding x:Name="saveShortcut" Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}"/>
        <KeyBinding x:Name="saveAsShortcut" Key="S" Modifiers="Ctrl+Shift" Command="{Binding SaveAsCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <GridLength x:Key="statusBarMaxHeight">20</GridLength>

        <GridLengthConverter x:Key="lengthConverter"/>
        <Style TargetType="RowDefinition" x:Key="notifyRow">
            <Setter  Property="Height" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status.Notify}" Value="True">
                    <DataTrigger.EnterActions>
                        <RemoveStoryboard BeginStoryboardName="slideOutAnim"/>
                        <BeginStoryboard x:Name="slideInAnim">
                            <Storyboard>
                                <extensions:GridLengthAnimation Duration="0:0:0.25" FillBehavior="HoldEnd" Storyboard.TargetProperty="Height" From="0" To="{StaticResource statusBarMaxHeight}" Unit="Pixel">
                                    <extensions:GridLengthAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </extensions:GridLengthAnimation.EasingFunction>
                                </extensions:GridLengthAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="slideInAnim"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status.Notify}" Value="False">
                    <DataTrigger.EnterActions>
                        <RemoveStoryboard BeginStoryboardName="slideInAnim"/>
                        <BeginStoryboard x:Name="slideOutAnim">
                            <Storyboard>
                                <extensions:GridLengthAnimation BeginTime="0:0:0.5" Duration="0:0:1.25" FillBehavior="HoldEnd" Storyboard.TargetProperty="Height" From="{StaticResource statusBarMaxHeight}" To="0" Unit="Pixel">
                                    <extensions:GridLengthAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseInOut"/>
                                    </extensions:GridLengthAnimation.EasingFunction>
                                </extensions:GridLengthAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="slideOutAnim"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status.Notify}" Value="{x:Null}">
                    <Setter Property="Height" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- === Context Menu === -->
        <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" x:Key="FilterContextMenu">
            <MenuItem Command="{Binding ToggleFilenameFilterCommand}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="_Filter:"/>
                        <TextBox Text="{Binding FileNameFilter, UpdateSourceTrigger=PropertyChanged}" MinWidth="80"/>
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>

    <!-- ========================================== Main Grid ========================================== -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" x:Name="menuBarRow" />
            <RowDefinition Height="*" x:Name="mainRow" />
            <RowDefinition x:Name="footerRow" Style="{StaticResource notifyRow}"/>
            <!--Height="{Binding ActualHeight, ElementName=statusBarGrid}"-->
        </Grid.RowDefinitions>

        <!-- ============== Menu Bar ============== -->
        <Menu IsMainMenu="True" Grid.Row="0">
            <MenuItem Header="_File" AlternationCount="2">
                <MenuItem Header="_Open" Command="{Binding OpenFilesCommand}" InputGestureText="{Binding ElementName=openShortcut, Path=Gesture, Converter={StaticResource gestureConverter}}"/>
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="{Binding ElementName=saveShortcut, Path=Gesture, Converter={StaticResource gestureConverter}}"/>
                <MenuItem Header="_Save As" Command="{Binding SaveAsCommand}" InputGestureText="{Binding ElementName=saveAsShortcut, Path=Gesture, Converter={StaticResource gestureConverter}}"/>
            </MenuItem>
        </Menu>

        <!-- ============== Body Tabs ============== -->
        <TabControl Grid.Row="1" Grid.RowSpan="2">
            <TabItem Header="Files" x:Name="filesTab">
                <DataGrid x:Name="filesGrid" ItemsSource="{Binding ImageFilesView}" EnableRowVirtualization="False" EnableColumnVirtualization="False" RowHeight="30" AutoGenerateColumns="False" CanUserSortColumns="True" CanUserReorderColumns="True" CanUserDeleteRows="True" HeadersVisibility="Column" AlternatingRowBackground="LightGray">
                    <DataGrid.Columns>
                        <!-- == Name Column == -->
                        <DataGridTemplateColumn SortMemberPath="Name" Width="*" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <TextBlock x:Name="fileNameHeader" Text="Name" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <ToggleButton x:Name="fileNameFilterEnabled" HorizontalAlignment="Right" Content="Filter" IsChecked="{Binding DataContext.EnableFileNameFilter, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Margin="10,0,0,0"/>
                                    <TextBox x:Name="filterTextBox" Text="{Binding DataContext.FileNameFilter, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                             Visibility="{Binding DataContext.EnableFileNameFilter, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}"/>
                                </StackPanel>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate d:DataType="models:ImageDataModel">
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- == Image Column == --> 
                        <DataGridTemplateColumn Header="Image" IsReadOnly="True" MinWidth="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate d:DataType="models:ImageDataModel">
                                    <Image Source="{Binding Path}" MaxHeight="25" Stretch="Uniform" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="LowQuality">
                                        <Image.CacheMode>
                                            <BitmapCache EnableClearType="False"
                                                         RenderOptions.CachingHint="Cache"
                                                         RenderOptions.BitmapScalingMode="LowQuality"
                                                         SnapsToDevicePixels="True"/>
                                        </Image.CacheMode>
                                    </Image>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- == Image Size Column == -->
                        <DataGridTemplateColumn Header="Size" SortMemberPath="PixelCount" IsReadOnly="True" MinWidth="80">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate d:DataType="models:ImageDataModel">
                                    <TextBlock Text="{Binding Data.Size}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- == File Size Column == -->
                        <DataGridTemplateColumn Header="File Size" SortMemberPath="Size" IsReadOnly="True" MinWidth="80">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate d:DataType="models:ImageDataModel">
                                    <TextBlock Text="{Binding SizeFormatted}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>

        <!-- ============== Status Bar ============== -->
        <Grid Grid.Row="2" x:Name="statusBarGrid">
            <ProgressBar x:Name="statusProgress" Minimum="0" Maximum="1" Value="{Binding Status.ProgressPercent, FallbackValue=0}"  VerticalAlignment="Stretch"/>
            <TextBlock x:Name="statusText" Text="{Binding Status.Status}" Foreground="{Binding Status.TextColor}" FontWeight="Bold" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Top">
            </TextBlock>
        </Grid>
    </Grid>
</Window>
